{"ast":null,"code":"var _classCallCheck = require(\"/home/ryan/Music/SantuyApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/ryan/Music/SantuyApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar prefixes = ['webkit'];\n\nvar Grade = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Grade(container, img_selector, callback) {\n    _classCallCheck(this, Grade);\n\n    this.callback = callback || null;\n    this.container = container;\n    this.image = this.container.querySelector(img_selector) || this.container.querySelector('img');\n    this.gradientData = [];\n\n    if (!this.image || !this.container) {\n      return;\n    }\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.imageDimensions = {\n      width: 0,\n      height: 0\n    };\n    this.imageData = [];\n    this.readImage();\n  }\n\n  _createClass(Grade, [{\n    key: \"readImage\",\n    value: function readImage() {\n      this.imageDimensions.width = this.image.width * 0.1;\n      this.imageDimensions.height = this.image.height * 0.1;\n      this.render();\n    }\n  }, {\n    key: \"getImageData\",\n    value: function getImageData() {\n      var imageData = this.ctx.getImageData(0, 0, this.imageDimensions.width, this.imageDimensions.height).data;\n      this.imageData = Array.from(imageData);\n    }\n  }, {\n    key: \"getChunkedImageData\",\n    value: function getChunkedImageData() {\n      var perChunk = 4;\n      var chunked = this.imageData.reduce(function (ar, it, i) {\n        var ix = Math.floor(i / perChunk);\n\n        if (!ar[ix]) {\n          ar[ix] = [];\n        }\n\n        ar[ix].push(it);\n        return ar;\n      }, []);\n      var filtered = chunked.filter(function (rgba) {\n        return rgba.slice(0, 2).every(function (val) {\n          return val < 250;\n        }) && rgba.slice(0, 2).every(function (val) {\n          return val > 0;\n        });\n      });\n      return filtered;\n    }\n  }, {\n    key: \"getRGBAGradientValues\",\n    value: function getRGBAGradientValues(top) {\n      return top.map(function (color, index) {\n        return \"rgb(\".concat(color.rgba.slice(0, 3).join(','), \") \").concat(index == 0 ? '0%' : '75%');\n      }).join(',');\n    }\n  }, {\n    key: \"getCSSGradientProperty\",\n    value: function getCSSGradientProperty(top) {\n      var val = this.getRGBAGradientValues(top);\n      return prefixes.map(function (prefix) {\n        return \"background-image: -\".concat(prefix, \"-linear-gradient(\\n                        135deg,\\n                        \").concat(val, \"\\n                    )\");\n      }).concat([\"background-image: linear-gradient(\\n                    135deg,\\n                    \".concat(val, \"\\n                )\")]).join(';');\n    }\n  }, {\n    key: \"getMiddleRGB\",\n    value: function getMiddleRGB(start, end) {\n      var w = 0.5 * 2 - 1;\n      var w1 = (w + 1) / 2.0;\n      var w2 = 1 - w1;\n      var rgb = [parseInt(start[0] * w1 + end[0] * w2), parseInt(start[1] * w1 + end[1] * w2), parseInt(start[2] * w1 + end[2] * w2)];\n      return rgb;\n    }\n  }, {\n    key: \"getSortedValues\",\n    value: function getSortedValues(uniq) {\n      var occurs = Object.keys(uniq).map(function (key) {\n        var rgbaKey = key;\n        var components = key.split('|'),\n            brightness = (components[0] * 299 + components[1] * 587 + components[2] * 114) / 1000;\n        return {\n          rgba: rgbaKey.split('|'),\n          occurs: uniq[key],\n          brightness: brightness\n        };\n      }).sort(function (a, b) {\n        return a.occurs - b.occurs;\n      }).reverse().slice(0, 10);\n      return occurs.sort(function (a, b) {\n        return a.brightness - b.brightness;\n      }).reverse();\n    }\n  }, {\n    key: \"getTextProperty\",\n    value: function getTextProperty(top) {\n      var rgb = this.getMiddleRGB(top[0].rgba.slice(0, 3), top[1].rgba.slice(0, 3));\n      var o = Math.round((parseInt(rgb[0]) * 299 + parseInt(rgb[1]) * 587 + parseInt(rgb[2]) * 114) / 1000);\n\n      if (o > 125) {\n        return 'color: #000';\n      } else {\n        return 'color: #fff';\n      }\n    }\n  }, {\n    key: \"getTopValues\",\n    value: function getTopValues(uniq) {\n      var sorted = this.getSortedValues(uniq);\n      return [sorted[0], sorted[sorted.length - 1]];\n    }\n  }, {\n    key: \"getUniqValues\",\n    value: function getUniqValues(chunked) {\n      return chunked.reduce(function (accum, current) {\n        var key = current.join('|');\n\n        if (!accum[key]) {\n          accum[key] = 1;\n          return accum;\n        }\n\n        accum[key] = ++accum[key];\n        return accum;\n      }, {});\n    }\n  }, {\n    key: \"renderGradient\",\n    value: function renderGradient() {\n      var ls = window.localStorage;\n      var item_name = \"grade-\".concat(this.image.getAttribute('src'));\n      var top = null;\n\n      if (ls && ls.getItem(item_name)) {\n        top = JSON.parse(ls.getItem(item_name));\n      } else {\n        var chunked = this.getChunkedImageData();\n        top = this.getTopValues(this.getUniqValues(chunked));\n\n        if (ls) {\n          ls.setItem(item_name, JSON.stringify(top));\n        }\n      }\n\n      if (this.callback) {\n        this.gradientData = top;\n        return;\n      }\n\n      var gradientProperty = this.getCSSGradientProperty(top);\n      var textProperty = this.getTextProperty(top);\n      var style = \"\".concat(this.container.getAttribute('style') || '', \"; \").concat(gradientProperty, \"; \").concat(textProperty);\n      this.container.setAttribute('style', style);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.canvas.width = this.imageDimensions.width;\n      this.canvas.height = this.imageDimensions.height;\n      this.ctx.drawImage(this.image, 0, 0, this.imageDimensions.width, this.imageDimensions.height);\n      this.getImageData();\n      this.renderGradient();\n    }\n  }]);\n\n  return Grade;\n}();\n\nmodule.exports = function (containers, img_selector, callback) {\n  var init = function init(container, img_selector, callback) {\n    var grade = new Grade(container, img_selector, callback),\n        gradientData = grade.gradientData;\n\n    if (!gradientData.length) {\n      return null;\n    }\n\n    return {\n      element: container,\n      gradientData: gradientData\n    };\n  };\n\n  var results = (NodeList.prototype.isPrototypeOf(containers) ? Array.from(containers).map(function (container) {\n    return init(container, img_selector, callback);\n  }) : [init(containers, img_selector, callback)]).filter(Boolean);\n\n  if (results.length) {\n    return callback(results);\n  }\n};","map":{"version":3,"sources":["/home/ryan/Music/SantuyApp/node_modules/grade-js/src/index.js"],"names":["prefixes","Grade","container","img_selector","callback","image","querySelector","gradientData","canvas","document","createElement","ctx","getContext","imageDimensions","width","height","imageData","readImage","render","getImageData","data","Array","from","perChunk","chunked","reduce","ar","it","i","ix","Math","floor","push","filtered","filter","rgba","slice","every","val","top","map","color","index","join","getRGBAGradientValues","prefix","concat","start","end","w","w1","w2","rgb","parseInt","uniq","occurs","Object","keys","key","rgbaKey","components","split","brightness","sort","a","b","reverse","getMiddleRGB","o","round","sorted","getSortedValues","length","accum","current","ls","window","localStorage","item_name","getAttribute","getItem","JSON","parse","getChunkedImageData","getTopValues","getUniqValues","setItem","stringify","gradientProperty","getCSSGradientProperty","textProperty","getTextProperty","style","setAttribute","drawImage","renderGradient","module","exports","containers","init","grade","element","results","NodeList","prototype","isPrototypeOf","Boolean"],"mappings":"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","sourcesContent":["const prefixes = ['webkit'];\n\nclass Grade {\n    constructor(container, img_selector, callback) {\n        this.callback = callback || null\n        this.container = container;\n        this.image = this.container.querySelector(img_selector) || this.container.querySelector('img')\n        this.gradientData = []\n        if(!this.image || !this.container){\n            return\n        }\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.imageDimensions = {\n            width: 0,\n            height: 0\n        };\n        this.imageData = [];\n        this.readImage()\n    }\n\n    readImage() {\n        this.imageDimensions.width = this.image.width * 0.1;\n        this.imageDimensions.height = this.image.height * 0.1;\n        this.render()\n    }\n\n    getImageData() {\n        let imageData = this.ctx.getImageData(\n            0, 0, this.imageDimensions.width, this.imageDimensions.height\n        ).data;\n        this.imageData = Array.from(imageData)\n    }\n\n    getChunkedImageData() {\n        const perChunk = 4;\n\n        let chunked = this.imageData.reduce((ar, it, i) => {\n            const ix = Math.floor(i / perChunk)\n            if (!ar[ix]) {\n                ar[ix] = []\n            }\n            ar[ix].push(it);\n            return ar\n        }, []);\n\n        let filtered = chunked.filter(rgba => {\n            return rgba.slice(0, 2).every(val => val < 250) && rgba.slice(0, 2).every(val => val > 0)\n        });\n\n        return filtered\n    }\n\n    getRGBAGradientValues(top) {\n        return top.map((color, index) => {\n            return `rgb(${color.rgba.slice(0, 3).join(',')}) ${index == 0 ? '0%' : '75%'}`\n        }).join(',')\n    }\n\n    getCSSGradientProperty(top) {\n        const val = this.getRGBAGradientValues(top);\n        return prefixes.map(prefix => {\n            return `background-image: -${prefix}-linear-gradient(\n                        135deg,\n                        ${val}\n                    )`\n        }).concat([`background-image: linear-gradient(\n                    135deg,\n                    ${val}\n                )`]).join(';')\n    }\n\n    getMiddleRGB(start, end) {\n        let w = 0.5 * 2 - 1;\n        let w1 = (w + 1) / 2.0;\n        let w2 = 1 - w1;\n        let rgb = [parseInt(start[0] * w1 + end[0] * w2), parseInt(start[1] * w1 + end[1] * w2), parseInt(start[2] * w1 + end[2] * w2)];\n        return rgb;\n    }\n\n    getSortedValues(uniq) {\n        const occurs = Object.keys(uniq).map(key => {\n                const rgbaKey = key;\n                let components = key.split('|'),\n                    brightness = ((components[0] * 299) + (components[1] * 587) + (components[2] * 114)) / 1000\n                return {\n                    rgba: rgbaKey.split('|'),\n                    occurs: uniq[key],\n                    brightness\n                }\n            }).sort((a, b) => a.occurs - b.occurs).reverse().slice(0, 10);\n        return occurs.sort((a, b) => a.brightness - b.brightness).reverse()\n    }\n\n    getTextProperty(top) {\n        let rgb = this.getMiddleRGB(top[0].rgba.slice(0,3), top[1].rgba.slice(0,3));\n        let o = Math.round(((parseInt(rgb[0]) * 299) + (parseInt(rgb[1]) * 587) + (parseInt(rgb[2]) * 114)) /1000);\n        if (o > 125) {\n            return 'color: #000';\n        } else { \n            return 'color: #fff';\n        }\n    }\n\n    getTopValues(uniq) {\n        let sorted = this.getSortedValues(uniq);\n        return [sorted[0], sorted[sorted.length - 1]]\n    }\n\n    getUniqValues(chunked) {\n        return chunked.reduce((accum, current) => {\n            let key = current.join('|');\n            if (!accum[key]) {\n                accum[key] = 1;\n                return accum\n            }\n            accum[key] = ++(accum[key]);\n            return accum\n        }, {})\n    }\n\n    renderGradient() {\n        const ls = window.localStorage;\n        const item_name = `grade-${this.image.getAttribute('src')}`;\n        let top = null;\n\n        if (ls && ls.getItem(item_name)) {\n            top = JSON.parse(ls.getItem(item_name));\n        } else {\n            let chunked = this.getChunkedImageData();\n            top = this.getTopValues(this.getUniqValues(chunked));\n\n            if (ls) {\n                ls.setItem(item_name, JSON.stringify(top));\n            }\n        }\n\n        if(this.callback){\n            this.gradientData = top\n            return\n        }\n\n        let gradientProperty = this.getCSSGradientProperty(top);\n\n        let textProperty = this.getTextProperty(top);\n\n        let style = `${this.container.getAttribute('style') || ''}; ${gradientProperty}; ${textProperty}`;\n        this.container.setAttribute('style', style)\n    }\n\n    render() {\n        this.canvas.width = this.imageDimensions.width;\n        this.canvas.height = this.imageDimensions.height;\n        this.ctx.drawImage(this.image, 0, 0, this.imageDimensions.width, this.imageDimensions.height);\n        this.getImageData();\n        this.renderGradient();\n    }\n}\n\nmodule.exports = (containers, img_selector, callback) => {\n    const init = (container, img_selector, callback) => {\n        let grade = new Grade(container, img_selector, callback),\n            gradientData = grade.gradientData\n        if(!gradientData.length){\n            return null\n        }\n        return {\n            element: container,\n            gradientData\n        }\n    }\n    let results = (NodeList.prototype.isPrototypeOf(containers)\n    ? Array.from(containers).map(container => init(container, img_selector, callback))\n    : [init(containers, img_selector, callback)]).filter(Boolean)\n\n    if(results.length){\n        return callback(results)\n    }\n};\n"]},"metadata":{},"sourceType":"script"}