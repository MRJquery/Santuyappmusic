{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ryan/Music/SantuyApp/src/components/fragment/LangList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport '../assets/scss/LangList.scss';\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeContext } from \"../../api/Theme\";\n\nfunction LangList(props) {\n  _s();\n\n  const [isSelected, setSelected] = useState(false);\n\n  const handleSelected = e => {\n    e.stopPropagation();\n    props.onClick(props.item, !isSelected);\n    setSelected(!isSelected);\n  };\n\n  const useStyle = useContext(ThemeContext);\n  const [onSelect, setOnSelect] = useState({});\n  useEffect(() => {\n    if (isSelected) {\n      setOnSelect(useStyle.button.onHover);\n    } else {\n      setOnSelect({});\n    }\n  }, [isSelected, useStyle.button.onHover]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    style: onSelect,\n    onClick: handleSelected,\n    children: props.item\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LangList, \"QhDFCkOWdYcB1ILx9Wwn2meckdQ=\");\n\n_c = LangList;\nexport default LangList;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangList\");","map":{"version":3,"sources":["/home/ryan/Music/SantuyApp/src/components/fragment/LangList.jsx"],"names":["React","useContext","useEffect","useState","Button","ThemeContext","LangList","props","isSelected","setSelected","handleSelected","e","stopPropagation","onClick","item","useStyle","onSelect","setOnSelect","button","onHover"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAO,8BAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMO,cAAc,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,eAAF;AACAL,IAAAA,KAAK,CAACM,OAAN,CAAcN,KAAK,CAACO,IAApB,EAAyB,CAACN,UAA1B;AACAC,IAAAA,WAAW,CAAC,CAACD,UAAF,CAAX;AACH,GAJD;;AAKA,QAAMO,QAAQ,GAAGd,UAAU,CAACI,YAAD,CAA3B;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,UAAJ,EAAgB;AACZS,MAAAA,WAAW,CAACF,QAAQ,CAACG,MAAT,CAAgBC,OAAjB,CAAX;AACH,KAFD,MAEO;AACHF,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AACJ,GANQ,EAMN,CAACT,UAAD,EAAaO,QAAQ,CAACG,MAAT,CAAgBC,OAA7B,CANM,CAAT;AAOA,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAEH,QAAf;AAAyB,IAAA,OAAO,EAAEN,cAAlC;AAAA,cACKH,KAAK,CAACO;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GArBQR,Q;;KAAAA,Q;AAuBT,eAAeA,QAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport '../assets/scss/LangList.scss';\nimport Button from \"@material-ui/core/Button\";\nimport {ThemeContext} from \"../../api/Theme\";\n\nfunction LangList(props) {\n    const [isSelected, setSelected] = useState(false);\n    const handleSelected = e => {\n        e.stopPropagation();\n        props.onClick(props.item,!isSelected);\n        setSelected(!isSelected);\n    };\n    const useStyle = useContext(ThemeContext);\n    const [onSelect, setOnSelect] = useState({});\n    useEffect(() => {\n        if (isSelected) {\n            setOnSelect(useStyle.button.onHover)\n        } else {\n            setOnSelect({})\n        }\n    }, [isSelected, useStyle.button.onHover])\n    return (\n        <Button style={onSelect} onClick={handleSelected}>\n            {props.item}\n        </Button>\n    );\n}\n\nexport default LangList;"]},"metadata":{},"sourceType":"module"}