{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ryan/Music/SantuyApp/src/components/fragment/MusicCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../assets/scss/MusicCard.scss';\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport { useDispatch } from \"react-redux\";\nimport { increaseTimesPlayed, setCurrentPlaying } from \"../../actions/actions\";\nimport Name from \"./Name\";\n\nfunction MusicCard(props) {\n  _s();\n\n  const {\n    name,\n    img,\n    author_name\n  } = props.music;\n  const [isHovered, setHovered] = useState(false);\n\n  function handleResponse() {\n    setHovered(!isHovered);\n  }\n\n  const dispatch = useDispatch();\n\n  function handlePlay() {\n    dispatch(setCurrentPlaying(props.music));\n    dispatch(increaseTimesPlayed(props.music.id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handlePlay,\n      className: \"music-card-cover\",\n      onMouseOver: handleResponse,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../assets/img/\" + img).default,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"play-circle\",\n        children: /*#__PURE__*/_jsxDEV(PlayCircleFilledWhiteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Name, {\n        name: name,\n        className: \"song-name\",\n        length: name.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Name, {\n        name: author_name,\n        className: \"author-name\",\n        length: author_name.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MusicCard, \"igdYo9KhPhWvyK+JcTZh2QkLII8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MusicCard;\nexport default MusicCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicCard\");","map":{"version":3,"sources":["/home/ryan/Music/SantuyApp/src/components/fragment/MusicCard.jsx"],"names":["React","useState","PlayCircleFilledWhiteIcon","useDispatch","increaseTimesPlayed","setCurrentPlaying","Name","MusicCard","props","name","img","author_name","music","isHovered","setHovered","handleResponse","dispatch","handlePlay","id","require","default","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,+BAAP;AACA,OAAOC,yBAAP,MAAsC,0CAAtC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,mBAAR,EAA6BC,iBAA7B,QAAqD,uBAArD;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,MAA2BH,KAAK,CAACI,KAAvC;AAEA,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASc,cAAT,GAA0B;AACtBD,IAAAA,UAAU,CAAC,CAACD,SAAF,CAAV;AACH;;AAED,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,WAASc,UAAT,GAAsB;AAClBD,IAAAA,QAAQ,CAACX,iBAAiB,CAACG,KAAK,CAACI,KAAP,CAAlB,CAAR;AACAI,IAAAA,QAAQ,CAACZ,mBAAmB,CAACI,KAAK,CAACI,KAAN,CAAYM,EAAb,CAApB,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAE,YAAhB;AAAA,4BACI;AAAK,MAAA,OAAO,EAAED,UAAd;AAA2B,MAAA,SAAS,EAAE,kBAAtC;AAA0D,MAAA,WAAW,EAAEF,cAAvE;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEI,OAAO,CAAC,mBAAmBT,GAApB,CAAP,CAAgCU,OAA1C;AAAmD,QAAA,GAAG,EAAEX;AAAxD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,SAAS,EAAE,WAA7B;AAA0C,QAAA,MAAM,EAAEA,IAAI,CAACY;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEV,WAAZ;AAAyB,QAAA,SAAS,EAAE,aAApC;AAAmD,QAAA,MAAM,EAAEA,WAAW,CAACU;AAAvE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA9BQd,S;UASYJ,W;;;KATZI,S;AAgCT,eAAeA,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport '../assets/scss/MusicCard.scss';\nimport PlayCircleFilledWhiteIcon from \"@material-ui/icons/PlayCircleFilledWhite\";\nimport {useDispatch} from \"react-redux\";\nimport {increaseTimesPlayed, setCurrentPlaying} from \"../../actions/actions\";\nimport Name from \"./Name\";\n\nfunction MusicCard(props) {\n    const {name, img, author_name} = props.music;\n\n    const [isHovered, setHovered] = useState(false);\n\n    function handleResponse() {\n        setHovered(!isHovered);\n    }\n\n    const dispatch = useDispatch();\n\n    function handlePlay() {\n        dispatch(setCurrentPlaying(props.music))\n        dispatch(increaseTimesPlayed(props.music.id));\n    }\n\n    return (\n        <div className={\"music-card\"}>\n            <div onClick={handlePlay}  className={\"music-card-cover\"} onMouseOver={handleResponse}>\n                <img src={require(\"../assets/img/\" + img).default} alt={name}/>\n                <div className=\"play-circle\">\n                    <PlayCircleFilledWhiteIcon/>\n                </div>\n            </div>\n            <React.Fragment>\n                <Name name={name} className={\"song-name\"} length={name.length}/>\n                <Name name={author_name} className={\"author-name\"} length={author_name.length}/>\n            </React.Fragment>\n        </div>\n    );\n}\n\nexport default MusicCard;"]},"metadata":{},"sourceType":"module"}